## Package file for Home Assistant, used for battery level monitoring
## Type: Home Assistant yaml file
## Date added: 2020-03-24
## Author: R.Bisschops

###############################################################################
##  Homeassistant settings
###############################################################################

homeassistant:
  customize:
    ## Environmental sensors
    sensor.environment_office_battery:
      friendly_name:  Batterij multisensor kantoor
    sensor.environment_livingroom_battery:
      friendly_name:  Batterij multisensor woonkamer
    sensor.environment_bathroom_battery:
      friendly_name:  Batterij multisensor badkamer
    sensor.environment_bedroom_battery:
      friendly_name:  Batterij multisensor slaapkamer
    sensor.environment_kim_battery:
      friendly_name:  Batterij multisensor kamer Kim
    sensor.environment_toilet_battery:
      friendly_name:  Batterij multisensor toilet
    sensor.environment_storage_battery:
      friendly_name:  Batterij multisensor berging
    sensor.environment_heating_room_battery:
      friendly_name: Batterij multisensor ketel ruimte
    sensor.environment_hallway_floor2_battery:
      friendly_name: Batterij multisensor overloop 2e verdieping
    ## Light sensors
    sensor.light_level_office_battery:
      friendly_name: Batterij licht sensor kantoor
    ## Door sensors
    sensor.door_refrigerator_battery:
      friendly_name: Batterij koelkastdeur
    ## Motion sensors  
    sensor.motion_office_battery:
      friendly_name: Batterij bewegingssensor kantoor
  ## Vibrations sensors
    sensor.vibration_mailbox_battery:
      friendly_name: Batterij brievenbus sensor
    ## Test sensors (dummies)
    sensor.environment_test_battery:
      friendly_name: Batterij test sensor

###############################################################################
#  Entities
###############################################################################

sensor:
  ## Inhouse environment sensors
  - platform: "mqtt"
    name: environment_office_battery
    state_topic: "zigbee2mqtt/aqara_office_env"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "%"
    device_class: "battery"
    value_template: "{{ value_json.battery }}"
  - platform: "mqtt"
    name: environment_bathroom_battery
    state_topic: "zigbee2mqtt/aqara_bathroom_env"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "%"
    device_class: "battery"
    value_template: "{{ value_json.battery }}"
  - platform: "mqtt"
    name: environment_bedroom_battery
    state_topic: "zigbee2mqtt/aqara_bedroom_env"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "%"
    device_class: "battery"
    value_template: "{{ value_json.battery }}"
  - platform: "mqtt"
    name: environment_kim_battery
    state_topic: "zigbee2mqtt/aqara_kim_env"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "%"
    device_class: "battery"
    value_template: "{{ value_json.battery }}"
  - platform: "mqtt"
    name: environment_livingroom_battery
    state_topic: "zigbee2mqtt/aqara_livingroom_env"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "%"
    device_class: "battery"
    value_template: "{{ value_json.battery }}"
  - platform: "mqtt"
    name: environment_toilet_battery
    state_topic: "zigbee2mqtt/aqara_toilet_env"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "%"
    device_class: "battery"
    value_template: "{{ value_json.battery }}"
  - platform: "mqtt"
    name: environment_storage_battery
    state_topic: "zigbee2mqtt/aqara_storage_env"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "%"
    device_class: "battery"
    value_template: "{{ value_json.battery }}"
  - platform: "mqtt"
    name: environment_heating_room_battery
    state_topic: "zigbee2mqtt/aqara_heating_room_env"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "%"
    device_class: "battery"
    value_template: "{{ value_json.battery }}"
  - platform: "mqtt"
    name: environment_hallway_floor2_battery
    state_topic: "zigbee2mqtt/aqara_hallway_floor2_env"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "%"
    device_class: "battery"
    value_template: "{{ value_json.battery }}"
  ## Light sensors
  - platform: "mqtt"
    name:  light_level_office_battery
    state_topic: "zigbee2mqtt/light_sensor"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "%"
    device_class: "battery"
    value_template: "{{ value_json.battery }}"
  ## Refridgerator door
  - platform: "mqtt"
    name: door_refrigerator_battery
    state_topic: "zigbee2mqtt/aqara_refrigerator_door"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "%"
    device_class: "battery"
    value_template: "{{ value_json.battery }}"
  ## Motion sensors
  - platform: "mqtt"
    name: motion_office_battery
    state_topic: "zigbee2mqtt/mijia_office_motion"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "%"
    device_class: "battery"
    value_template: "{{ value_json.battery }}"
  ## Vibrations sensors
  - platform: "mqtt"
    name: vibration_mailbox_battery
    state_topic: "zigbee2mqtt/aqara_mailbox"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "%"
    device_class: "battery"
    value_template: "{{ value_json.battery }}"
  ## Test sensors (dummies)
  - platform: "mqtt"
    name: environment_test_battery
    state_topic: "test/test_sensor_env"
    unit_of_measurement: "%"
    device_class: "battery"
    value_template: "{{ value_json.battery }}"

###############################################################################
##  Groups
###############################################################################


###############################################################################
##  Automations
###############################################################################

automation:
  ## automation to run when a environmental sensors battery is running low
  - alias: "Notification battery level low"
    initial_state: "on" 
    trigger:
      platform: numeric_state
      entity_id:
      - sensor.environment_office_battery
      - sensor.environment_livingroom_battery
      - sensor.environment_bathroom_battery
      - sensor.environment_bedroom_battery
      - sensor.environment_kim_battery
      - sensor.environment_toilet_battery
      - sensor.environment_storage_battery
      - sensor.environment_heating_room_battery
      - sensor.environment_hallway_floor2_battery
      - sensor.light_level_office_battery
      - sensor.door_refrigerator_battery
      - sensor.motion_office_battery
      - sensor.vibration_mailbox_battery
      - sensor.environment_test_battery
      below: 25
    action:
      # - service: script.notify_prowl
      #   data_template:
      #     value1: "Hi Ralph, "
      #     value2: "{{ trigger.to_state.attributes.friendly_name }} "
      #     value3: "is laag. Tijd om te vervangen"
      #     who: "ralph"
      #     prio: -2
      - service_template: >-
          {% if now().hour > 8 and now().hour <23 and is_state('input_select.presence_state_ralph', 'Home') %}
            script.battery_alert_notification
          {% else %}
            script.battery_alert_store
          {% endif %} 
        data_template:
          sensor: "{{ trigger.to_state.attributes.friendly_name }}"

###############################################################################
##  Templates
###############################################################################


###############################################################################
##  Scripts
###############################################################################
script:
  ## script for sending alerts when a environmetal sensors is not updating for a set time
  battery_alert_notification:
    alias: Omgevings sensor battery low notify
    sequence:
      - service: script.notify_prowl
        data_template:
          value1: "{% set timestamp = as_timestamp(now()) | timestamp_custom('%H:%M') %} {{ timestamp }}: "
          value2: "{{ sensor }} "
          value3: "is laag."
          who: "ralph"
          prio: -2
  ## script for storing the alert when Ralph is not home or during night time
  battery_alert_store:
    alias: Omgevings sensor update niet meer bewaar
    sequence:
      - service: mqtt.publish
        data_template:
          topic: "home/alert/sensor_battery"
          retain: true
          payload_template: >-
            {% set timestamp = as_timestamp(now()) | timestamp_custom('%H:%M') %}
            {{ {
              "time": timestamp,
              "sensor": sensor,
              "topic": "battery",
              "status" : "active"
            }|tojson }}

###############################################################################
##  Timers
###############################################################################
## Package file for Home Assistant, used for mediacenter
## Type: Home Assistant yaml file
## Date added: 2019-11-11
## Author: R.Bisschops
##

# remove input_select > humax_old_status

###############################################################################
##  Homeassistant settings
###############################################################################
homeassistant:
  customize:
    ## Harmony Hub remote
    remote.bisschops:
      friendly_name: Harmony Hub
      entity_picture: /local/harmony_icon.jpg

    ## ZigBeee2MQTT Switches
    switch.switch_media:
      friendly_name: Entertainment

    ## Media devices from Harmony
    switch.poweroff:
      friendly_name: PowerOff
    switch.television:
      friendly_name: Televisie
    switch.mediaplayer:
      friendly_name: Mediaplayer
    switch.appletv:
      friendly_name: Apple-TV
    switch.radio:
      friendly_name: Radio
    switch.music:
      friendly_name: Muziek
    switch.dvd:
      friendly_name: DVD
    switch.teletext:
      friendly_name: Teletekst
    switch.smarttv:
      friendly_name: Smart-TV
    switch.netflix:
      friendly_name: Netflix
    switch.spotify:
      friendly_name: Spotify
    switch.program_missed:
      friendly_name: Uitzending gemist
    switch.disney:
      friendly_name: Disney+
    switch.pathe:
      friendly_name: Pathe thuis
    switch.amazon:
      friendly_name: Amazon Prime  

    ## Media center timers  
    timer.media_media_center_delay:
      friendly_name: Inschakelvertraging media center
    timer.media_media_center_wait:
      friendly_name: Wachttijd media center
    timer.media_media_tv_radio_wait:
      friendly_name: Wachttijd tv-radio omschakeling

## Remotes
remote:
  - platform: harmony
    name: bisschops
    host: !secret ip_harmony_hub

## Media players
##  LG television
webostv:
  host: !secret ip_lgtelevision
  name: living_room_tv
  turn_on_action:
    service: persistent_notification.create
    data:
      message: "Turn on action"
  customize:
    sources:
      - Netflix
      - Disney+
      - PathÃ© Thuis
      - Amazon Prime Video
      - Set-top Box
      - NPO
      - Spotify Music - Luister gratis op LG TV
      - HDMI1
      - HDMI2

###############################################################################
##  Entities
###############################################################################
input_select: 
##-----------------------------------------------------------------------------------------------
## Used in Node-RED configuration
##-----------------------------------------------------------------------------------------------

  ## Current Harmony activity, used for automations and scripts
  media_harmony_livingroom_new_state:
    name: Activiteiten Harmony 
    options:
      - Televisie
      - Smart-TV
      - Netflix
      - Spotify
      - Uitzending gemist
      - Disney+
      - Amazon Prime
      - Pathe thuis
      - Mediaplayer
      - Apple-TV
      - Radio
      - Muziek
      - DVD
      - Teletekst
      - PowerOff
    icon: mdi:remote

  ## Previous Harmony activity, used for aurtomations and scripts
  ## MIGHT BE OBSOLTE, HOWEVER STILL FILLED FROM NODE_RED
  media_harmony_livingroom_old_state:
    name: Oude status
    options:
      - Televisie
      - Smart-TV
      - Netflix
      - Spotify
      - Uitzending gemist
      - Disney+
      - Amazon Prime
      - Pathe thuis
      - Mediaplayer
      - Apple-TV
      - Radio
      - Muziek
      - DVD
      - Teletekst
      - PowerOff 
    icon: mdi:remote

  ## Activity state for the Harmony Hub (used for follow-up actions per activity
  media_harmony_livingroom_state:
    name: Harmony status
    options: 
      - Turned off
      - Starting
      - Started
      - Turning off
      - Started cashed


  ## Previous state of the Humax, used for swapping the TV/Radio mode
  media_humax_old_state:
    name: Humax oude status
    options:
      - Televisie
      - Radio

##-----------------------------------------------------------------------------------------------
## No longer in used with Node-RED configuration
##-----------------------------------------------------------------------------------------------

  ## Obsolete, remove after check
  ## CHECK IF REALLY NO LONGER USED
  media_humax_new_state:
    name: Humax nieuwe status
    options:
      - Televisie
      - Radio

input_number:
##-----------------------------------------------------------------------------------------------
## Used in Node-RED configuration
##-----------------------------------------------------------------------------------------------

##-----------------------------------------------------------------------------------------------
## No longer in used with Node-RED configuration
##-----------------------------------------------------------------------------------------------

  media_volume_setpoint:
    name: Denon Volume
    initial: 45
    min: 1
    max: 75
    step: 1

##-----------------------------------------------------------------------------------------------
## Updated and changed entities - input_number
##-----------------------------------------------------------------------------------------------
  media_media_center_delay:
    name: Media start vertraging (sec)
    initial: 30
    min: 0
    max: 60
    step: 1
  media_media_wait_delay:
    name: Media wacht vertraging (sec)
    initial: 10
    min: 1
    max: 60    

input_text:
##-----------------------------------------------------------------------------------------------
## Used in Node-RED configuration
##-----------------------------------------------------------------------------------------------

##-----------------------------------------------------------------------------------------------
## No longer in used with Node-RED configuration
##-----------------------------------------------------------------------------------------------
  media_media_delay_timer:
    name: Media start vertraging (sec)
    initial: 30
    min: 1
    max: 60
  media_media_wait_timer:
    name: Media wacht vertraging (sec)
    initial: 10
    min: 1
    max: 60
  media_tv_radio_mode_timer:
    name: TV-radio wacht vertraging (sec)
    initial: 25
    min: 1
    max: 60

input_boolean:
##-----------------------------------------------------------------------------------------------
## Used in Node-RED configuration
##-----------------------------------------------------------------------------------------------
  ## Switch used for setting the recorder mode on   
  ## used for disabling the media center switch-off when a recording is programmed
  media_recording_mode:
    name: Recorder mode aan
    icon: mdi:video
  ## Enable buttons
  ## used for disabling the start of the media mode when lovelace buttons are changing from harmony
  ## on will enable the hub to switch, off will disable the hub from switching 
  media_enable_ui_buttons:
    name: UI buttons ingeschakeld
    initial: on
  ## Harmony mode selector inputs,
  ## used for manual selection from lovelace interface
  media_poweroff:
    name: PowerOff
  media_television:
    name: Televisie
  media_mediaplayer:
    name: Mediaplayer
  media_appletv:
    name: Apple-TV
  media_radio:
    name: Radio
  media_music:
    name: Muziek
  media_dvd:
    name: DVD
  media_teletext:
    name: Teletekst
  media_smarttv:
    name: Smart-TV
  media_netflix:
    name: Netflix
  media_spotify:
    name: Spotify
  media_program_missed:
    name: Uitzending gemist
  media_disney:
    name: Disney+
  media_pathe:
    name: Pathe thuis
  media_amazon:
    name: Amazon Prime

##-----------------------------------------------------------------------------------------------
## No longer in used with Node-RED configuration
##-----------------------------------------------------------------------------------------------
  ## Test buttons me3dia mode
  ## used for testing commands to Harmony Hub
  ## remove after completion of media package
  media_test_hub_command:
    name: Test Harmony Hub commando
    initial: off 

sensor:
##-----------------------------------------------------------------------------------------------
## Used in Node-RED configuration
##-----------------------------------------------------------------------------------------------
  ## Media center operations, sensor (Tradfri via Zigbee2MQTT)
  - platform: "mqtt"
    name: switch_media
    state_topic: "zigbee2mqtt/tradfri_media_switch"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "-"
    value_template: "{{ value_json.linkquality }}"
  - platform: template
    sensors:
      denon_volume:
        value_template: >
          {% if is_state('media_player.denon_avr', 'on')  %}
            {{ (state_attr('media_player.denon_avr', 'volume_level') * 100)|int }}
          {% endif %}
        friendly_name: Receiver Volume Level
        icon_template: mdi:volume-medium

##-----------------------------------------------------------------------------------------------
## No longer in used with Node-RED configuration
##-----------------------------------------------------------------------------------------------

switch:
##-----------------------------------------------------------------------------------------------
## Used in Node-RED configuration
##-----------------------------------------------------------------------------------------------
  ## Template switches synchronizing with the Harmony Hub. Operates reciproke
  ## switches are updated from the Harmony hub and set the Harmony hub from Hass
  - platform: template
    switches:
      poweroff:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'PowerOff') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: "PowerOff"
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ""
      television:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Televisie') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: "Televisie"
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ""
      mediaplayer:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Mediaplayer') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: "Mediaplayer"
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ""
      appletv:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Apple-TV') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: "Apple-TV"
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ""
      radio:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Radio') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: "Radio"
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ""
      music:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Muziek') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: "Muziek"
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: "" 
      dvd:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'DVD') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: "DVD"
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ""
      teletext:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Teletekst') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: "Teletekst"
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ""
      smarttv:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Smart-TV') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: "Smart-TV"
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ""
      netflix:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Netflix') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: "Netflix"
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ""
      spotify:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Spotify') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: "Spotify"
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ""
      program_missed:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Uizending gemist') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: "Uitzending gemist"
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ""
      disney:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Disney+') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: "Disney+"
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ""
      pathe:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Pathe thuis') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: "Pathe thuis"
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ""
      amazon:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Amazon Prime') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: "Amazon Prime"
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ""

##-----------------------------------------------------------------------------------------------
## No longer in used with Node-RED configuration
##-----------------------------------------------------------------------------------------------
  ## Media center operations, switch (Tradfri via Zigbee2MQTT)
  ## used for powering up all media devices
  - platform: "mqtt"
    name: switch_media
    state_topic: "zigbee2mqtt/tradfri_media_switch"
    availability_topic: "zigbee2mqtt/bridge/state"
    payload_off: "OFF"
    payload_on: "ON"
    value_template: "{{ value_json.state }}"
    command_topic: "zigbee2mqtt/tradfri_media_switch/set"

###############################################################################
##  Groups
###############################################################################


###############################################################################
##  Automations
###############################################################################
automation:
##-----------------------------------------------------------------------------------------------
## Used in Node-RED configuration
##-----------------------------------------------------------------------------------------------
  ## Automation for Harmony mode selector from HA Bridge,
  ## used for selection from HA Bridge (Alexa commands)
  - alias: "Media - actions triggered from HA-Bridge"
    initial_state: "on"
    trigger:
      platform: state
      entity_id:
        - binary_sensor.habridge_television
        - binary_sensor.habridge_mediaplayer
        - binary_sensor.habridge_appletv
        - binary_sensor.habridge_radio
        - binary_sensor.habridge_music
        - binary_sensor.habridge_smarttv
        - binary_sensor.habridge_netflix
        - binary_sensor.habridge_spotify
        - binary_sensor.habridge_poweroff
        - binary_sensor.habridge_program_missed
        - binary_sensor.habridge_disney
        - binary_sensor.habridge_pathe
        - binary_sensor.habridge_amazon
      to: "on"
    action:
      - service: script.media_set_media_input_mode
        data_template:
          name: "{{ trigger.to_state.object_id }}"

  ## Automation for Harmony mode selector from Harmony Hub,
  ## used for selection from Harmony Hub
  - alias: "Media - actions triggered from Harmony Hub"
    initial_state: "on"
    trigger:
      platform: state
      entity_id:
        - switch.poweroff
        - switch.television
        - switch.mediaplayer
        - switch.appletv
        - switch.radio
        - switch.music
        - switch.netflix
        - switch.spotify
        - switch.program_missed
        - switch.disney
        - switch.pathe
        - switch.amazon
      to: "on"
    action:
      - service: homeassistant.turn_off
        entity_id: input_boolean.media_enable_ui_buttons
      - service: script.media_set_media_input_mode
        data_template:
          name: "{{ trigger.to_state.object_id }}"
          type: "harmony"

##-----------------------------------------------------------------------------------------------
## No longer in used with Node-RED configuration
##-----------------------------------------------------------------------------------------------
  ## Test min and max settings on media start timer
  - alias: "Media - validate media start timer"
    initial_state: "off"
    trigger:
      - platform: state
        entity_id: input_text.media_media_delay_timer
    action:
      - service: input_text.set_value
        data_template:
          entity_id: input_text.media_media_delay_timer
          value: >
            {% if (states('input_text.media_media_delay_timer')|int) > 60 %}
              60
            {% elif (states('input_text.media_media_delay_timer')|int) < 1 %}
              1
            {% else %}
              {{ states('input_text.media_media_delay_timer')|int }}
            {% endif %}

  ## Test min and max settings on media wait timer
  - alias: "Media - validate media wait timer"
    initial_state: "off"
    trigger:
      - platform: state
        entity_id: input_text.media_media_wait_timer
    action:
      - service: input_text.set_value
        data_template:
          entity_id: input_text.media_media_wait_timer
          value: >
            {% if (states('input_text.media_media_wait_timer')|int) > 60 %}
              60
            {% elif (states('input_text.media_media_wait_timer')|int) < 1 %}
              1
            {% else %}
              {{ states('input_text.media_media_wait_timer')|int }}
            {% endif %}

  ## Automation for Harmony mode selector inputs, 
  ## used for manual selection from UI
  - alias: "Media - actions triggered from UI"
    initial_state: "off"
    trigger:
      platform: state
      entity_id: 
        - input_boolean.media_poweroff
        - input_boolean.media_television
        - input_boolean.media_mediaplayer
        - input_boolean.media_appletv
        - input_boolean.media_radio
        - input_boolean.media_music
        - input_boolean.media_dvd
        - input_boolean.media_teletext
        - input_boolean.media_smarttv
        - input_boolean.media_netflix
        - input_boolean.media_spotify
        - input_boolean.media_program_missed
        - input_boolean.media_disney
        - input_boolean.media_pathe
        - input_boolean.media_amazon
      to: "on"
    action:
      - service: script.media_media_settings_mode_generic
        data_template:
          new_state: "{{ trigger.to_state.attributes.friendly_name }}"
          old_state: "{{ states('input_select.media_harmony_livingroom_new_state') }}"
      - service_template: >-
          {% if is_state('switch.switch_media_center', 'on') %}
            script.media_media_settings_from_mains_on
          {% elif is_state('switch.switch_media_center', 'off') %}
            script.media_media_settings_from_mains_off
          {% endif%}

  ##  Continue script based on media_center_delay timer einde
  - alias: "Media - Timer media center start ending"
    initial_state: "off"
    trigger:
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.media_media_center_delay
    action:
      - service: script.media_media_settings_from_mains_off_followup

  ##  Automation to run actions after media_center_wait timer ends
  - alias: "Media - Timer media center wait ending"
    initial_state: "off"
    trigger:
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.media_media_center_wait
    action:
      - service: remote.send_command
        data:
          entity_id: remote.bisschops
          command:
            - PowerToggle
          device: "Popcorn"

  ##  Automation to run actions after tv radio timer ends
  - alias: "Media - Timer tv-radio wait ending"
    initial_state: "off"
    trigger:
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.media_media_tv_radio_wait
    action:
      - service: remote.send_command
        data:
          entity_id: remote.bisschops
          command:
            - TvRadio
          device: "Humax"

  ## Automation for Denon Volume control
  - alias: "Media - Denon set volume"
    initial_state: "off"
    trigger:
      platform: state
      entity_id: input_number.media_volume_setpoint
    action:
      - service: media_player.volume_set
        data_template:
          entity_id: media_player.living_room_avr
          volume_level: >
            {{states('input_number.media_volume_setpoint') | int / 100}}

  ## Automation for updating the Denon Volume control slider in the UI
  ## receiver must be on to set the volume, without this would throw error on startup
  - alias: "Media - Denon update volume slider"
    initial_state: "off"
    trigger:
      - platform: state
        entity_id: sensor.denon_volume
    condition:
      condition: state
      entity_id: media_player.living_room_avr
      state: "on"
    action:
      - delay:
          seconds: 3
      - service: input_number.set_value
        data_template:
          entity_id: input_number.media_volume_setpoint
          value: '{{ trigger.to_state.state }}'

  ##-------------------------------------------------------
  ## Test automations >> Move or remove ASAP after testing 
  ##-------------------------------------------------------

  ## Test automation for testing Harmony hub commands
  ## remove after completion of media package
  - alias: "Media - Test actions Harmony Hub"
    initial_state: "off"
    trigger:
      platform: state
      entity_id:
        - input_boolean.media_test_hub_command
      to: "on"
    action:
      - service: remote.send_command
        data:
          entity_id: remote.bisschops
          command:
            - PowerToggle
          device: "Popcorn"

###############################################################################
##  Templates
###############################################################################


###############################################################################
##  Scripts
###############################################################################
script:
##-----------------------------------------------------------------------------------------------
## Used in Node-RED configuration
##-----------------------------------------------------------------------------------------------

##-----------------------------------------------------------------------------------------------
## No longer in used with Node-RED configuration
##-----------------------------------------------------------------------------------------------

  ## Script for updating the state of the input buttons in Lovelace
  ## Triggered from automation "Media acties lovelace buttons"
  media_media_settings_mode_generic:
    alias: Set media mode script
    sequence:
      - condition: template
        value_template: >-
          {% if new_state == old_state %}
            false
          {% else %}
            true
          {% endif %}
      - service: input_select.select_option
        data_template:
          entity_id: input_select.media_harmony_livingroom_old_state
          option: "{{ old_state }}"
      - service: input_select.select_option
        data_template:
          entity_id: input_select.media_harmony_livingroom_new_state
          option: "{{ new_state }}"
      - service: input_boolean.turn_off
        data_template:
          entity_id: >-
            {% set media_devices =
              {
              "PowerOff":"poweroff",
              "Televisie":"television",
              "Mediaplayer":"mediaplayer",
              "Apple-TV":"appletv",
              "Radio":"radio",
              "Muziek":"music",
              "DVD":"dvd",
              "Teletekst":"teletext",
              "Smart-TV":"smarttv",
              "Netflix":"netflix",
              "Spotify":"spotify",
              "Uitzending gemist":"program_missed",
              "Disney+":"disney",
              "Pathe thuis":"pathe",
              "Amazon Prime":"amazon"
              }
            %}
            {% set entity = ["input_boolean.media_",media_devices[old_state]]|join %}
            {{ entity }}
  
  ## Script for changing the lovelace buttons to sync with HA Bridge input or Harmony updates
  ## Triggered from automations "Media acties HA-Bridge" and "Media acties Harmony Hub"
  media_set_media_input_mode:
    alias: Set media mode vanuit ha bridge of harmony
    sequence:
      - service: homeassistant.turn_on
        data_template:
          entity_id: >-
            {% set name = name|replace('habridge_','') %}
            {% set entity = ["input_boolean.media_",name]|join %}
            {{ entity }}

  ## Script for setting up media when main media switch is still off
  ## Tiggered from automation "Media acties lovelace buttons"
  media_media_settings_from_mains_off:
    alias: Media start als media switch uit
    sequence:
      - service: homeassistant.turn_on
        entity_id: switch.switch_media_center
      - service: timer.start
        data_template:
          entity_id: timer.media_media_center_delay
          duration: "00:00:{{ states('input_text.media_media_delay_timer')|int}}"

  ## Script for setting media when main media switch is off (followup)
  ## triggered from automation "Timer media center start einde"
  media_media_settings_from_mains_off_followup:
    alias: Media start als media switch uit - follow-up
    sequence:
      - service: script.media_media_settings_harmony
        data_template:
          current_state: "{{ states('input_select.media_harmony_livingroom_new_state') }}"
      - service: timer.start
        data_template:
          entity_id: timer.media_media_center_wait
          duration: "00:00:{{ states('input_text.media_media_wait_timer')|int}}"

  ## Script for setting up media when main media switch is already on 
  ## Tiggered from automation "Media acties lovelace buttons"
  media_media_settings_from_mains_on:
    alias: Media start als media switch aan
    sequence:
      - service: script.media_media_settings_harmony
        data_template:
          current_state: "{{ states('input_select.media_harmony_livingroom_new_state') }}"

  ## Script for setting up the Harmony actions 
  ## Triggerd from scripts "Media start als media switch uit - follow-up" and "Media start als media switch aan"
  media_media_settings_harmony:
    alias: Start Harmony acties
    sequence:
      - service: homeassistant.turn_on
        data_template:
          entity_id: >-
            {% set media_devices = 
              {
              "PowerOff":"poweroff",
              "Televisie":"television",
              "Mediaplayer":"mediaplayer",
              "Apple-TV":"appletv",
              "Radio":"radio",
              "Muziek":"music",
              "DVD":"dvd",
              "Teletekst":"teletext",
              "Smart-TV":"smarttv",
              "Netflix":"netflix",
              "Spotify":"spotify",
              "Uitzending gemist":"program_missed",
              "Disney+":"disney",
              "Pathe thuis":"pathe",
              "Amazon Prime":"amazon"
              }
            %}
            {% set entity = ["switch",media_devices[current_state]]|join(".") %}
            {{ entity }}
      - delay: 
          milliseconds: 250
      - service_template: >-
          {% if current_state == "Spotify"%}
            script.media_media_settings_mode_spotify
          {% elif current_state == "Netflix" %}
            script.media_media_settings_mode_netflix
          {% elif current_state == "Uitzending gemist" %}
            script.media_media_settings_mode_program_missed
          {% elif current_state == "Disney+" %}
            script.media_media_settings_mode_disney
          {% elif current_state == "Pathe thuis" %}
            script.media_media_settings_mode_pathe
          {% elif current_state == "Televisie" %}
            script.media_media_settings_mode_television
          {% elif current_state == "Radio" %}
            script.media_media_settings_mode_radio 
          {% elif current_state == "Muziek" %}
            script.media_media_settings_mode_music 
          {% elif current_state == "PowerOff" %}
            script.media_media_settings_mode_poweroff 
          {% else %}
            script.media_media_settings_mode_video
          {% endif %}

  ## Script for additional settings when Spotify mode is set 
  ## Triggered from script "Start Harmony acties"
  media_media_settings_mode_spotify:
    alias: Aanvullende media settings Spotify
    sequence:
      - delay: "{{ '00:00:05' if is_state('input_select.media_harmony_livingroom_old_state','PowerOff') else '00:00:00' }}"
      - service: 
          remote.send_command
        data:
          entity_id: remote.bisschops
          device: "Denon AV Receiver"
          command:
            - ModeStereo
      - service: input_select.select_option
        data:
          entity_id: input_select.light_livingroom_mode
          option: "Normaal"

  ## Script for additional settings when Netflix mode is set 
  ## Triggered from script "Start Harmony acties"
  media_media_settings_mode_netflix:
    alias: Aanvullende media settings Netflix
    sequence:
      - delay: "{{ '00:00:05' if is_state('input_select.media_harmony_livingroom_old_state','PowerOff') else '00:00:00' }}"
      - service: media_player.select_source
        data:
          entity_id: media_player.living_room_tv
          source: Netflix
      ## Service for setting the Denon Volume
      - service: input_number.set_value
        data:
          entity_id: input_number.media_volume_setpoint
          value: 50
      - service: input_select.select_option
        data:
          entity_id: input_select.light_livingroom_mode
          option: "Video"

  ## Script for additional settings when Uitzending gemist mode is set
  ## Triggered from script "Start Harmony acties"
  media_media_settings_mode_program_missed:
    alias: Aanvullende media settings Uitzending gemist
    sequence:
      - delay: "{{ '00:00:05' if is_state('input_select.media_harmony_livingroom_old_state','PowerOff') else '00:00:00' }}"
      - service: media_player.select_source
        data:
          entity_id: media_player.living_room_tv
          source: NPO
      ## Service for setting the Denon Volume
      - service: input_number.set_value
        data:
          entity_id: input_number.media_volume_setpoint
          value: 45
      - service: input_select.select_option
        data:
          entity_id: input_select.light_livingroom_mode
          option: "Video"
      # - condition: state
      #   entity_id: input_boolean.light_livingroom
      #   state: "on"
      # - service: script.light_hue_mode_change

  ## Script for additional settings when Disney+ mode is set
  ## Triggered from script "Start Harmony acties"
  media_media_settings_mode_disney:
    alias: Aanvullende media settings Disney+
    sequence:
      - delay: "{{ '00:00:05' if is_state('input_select.media_harmony_livingroom_old_state','PowerOff') else '00:00:00' }}"
      - service: media_player.select_source
        data:
          entity_id: media_player.living_room_tv
          source: Disney+
      ## Service for setting the Denon Volume
      - service: input_number.set_value
        data:
          entity_id: input_number.media_volume_setpoint
          value: 45
      - service: input_select.select_option
        data:
          entity_id: input_select.light_livingroom_mode
          option: "Video"
      # - condition: state
      #   entity_id: input_boolean.light_livingroom
      #   state: "on"
      # - service: script.light_hue_mode_change

  ## Script for additional settings when Pathe thuis mode is set
  ## Triggered from script "Start Harmony acties"
  media_media_settings_mode_pathe:
    alias: Aanvullende media settings Pathe Thuis
    sequence:
      - delay: "{{ '00:00:05' if is_state('input_select.media_harmony_livingroom_old_state','PowerOff') else '00:00:00' }}"
      - service: media_player.select_source
        data:
          entity_id: media_player.living_room_tv
          source: PathÃ© Thuis
      ## Service for setting the Denon Volume
      - service: input_number.set_value
        data:
          entity_id: input_number.media_volume_setpoint
          value: 45
      - service: input_select.select_option
        data:
          entity_id: input_select.light_livingroom_mode
          option: "Video"
      # - condition: state
      #   entity_id: input_boolean.light_livingroom
      #   state: "on"
      # - service: script.light_hue_mode_change

  ## Script for additional settings when Television mode is set
  ## Triggered from script "Start Harmony acties"
  media_media_settings_mode_television:
    alias: Aanvullende media settings Television
    sequence:
      - service: script.media_set_humax_mode
        data_template:
          new_state: "Televisie"
          old_state: "{{ states('input_select.media_humax_old_state') }}"
      ## Service for setting the Denon Volume
      - service: input_number.set_value
        data:
          entity_id: input_number.media_volume_setpoint
          value: 55
      - service: input_select.select_option
        data:
          entity_id: input_select.light_livingroom_mode
          option: "Video"
      # - condition: state
      #   entity_id: input_boolean.light_livingroom
      #   state: "on"
      # - service: script.light_hue_mode_change

  ## Script for additional settings when Radio mode is set 
  ## Triggered from script "Start Harmony acties"
  media_media_settings_mode_radio:
    alias: Aanvullende media settings Radio
    sequence:
      - service: script.media_set_humax_mode
        data_template:
          new_state: "Radio"
          old_state: "{{ states('input_select.media_humax_old_state') }}"
      ## Service for setting the Denon Volume
      - service: input_number.set_value
        data:
          entity_id: input_number.media_volume_setpoint
          value: 45
      - service: input_select.select_option
        data:
          entity_id: input_select.light_livingroom_mode
          option: "Normaal"
      # - condition: state
      #   entity_id: input_boolean.light_livingroom
      #   state: "on"
      # - service: script.light_hue_mode_change

  ## Script for additional settings when Music mode is set 
  ## Triggered from script "Start Harmony acties"
  media_media_settings_mode_music:
    alias: Aanvullende media settings Music
    sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.light_livingroom_mode
          option: "Normaal"
      # - condition: state
      #   entity_id: input_boolean.light_livingroom
      #   state: "on"
      # - service: script.light_hue_mode_change

  ## Script for additional settings when Poweroff is set 
  ## Triggered from script "Start Harmony acties"
  media_media_settings_mode_poweroff:
    alias: Aanvullende media settings PowerOff
    sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.light_livingroom_mode
          option: "Normaal"
      # - condition: state
      #   entity_id: input_boolean.light_livingroom
      #   state: "on"
      # - service: script.light_hue_mode_change

  ## Script for additional Humax settings when Television mode or radio mode is set
  ## Triggered from scripts "Aanvullende media settings Televisie" and "Aanvullende media settings Radio"
  media_set_humax_mode:
    alias: Zet Radio of Televisie mode Humax
    sequence:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.media_humax_old_state
          option: "{{ new_state }}"
      - condition: template
        value_template: >
          {% if states('input_select.media_harmony_livingroom_new_state') == 'Televisie' or states('input_select.media_harmony_livingroom_new_state') == 'Radio' %}
            {% if states('input_select.media_harmony_livingroom_old_state') != 'Televisie' and states('input_select.media_harmony_livingroom_old_state') != 'Radio' %}
              {% if states('input_select.media_harmony_livingroom_new_state') != old_state %}
                true
              {% else %}
                false
              {% endif %}
            {% else %}
              false
            {% endif %}
          {% else %}
            false
          {% endif %}
      - service: timer.start
        data_template:
          entity_id: timer.media_media_tv_radio_wait
          duration: "00:00:{{ states('input_text.media_tv_radio_mode_timer')|int}}"

  ## Script for additional settings when any video mode is set 
  ## Triggered from script "Start Harmony acties"
  media_media_settings_mode_video:
    alias: Aanvullende media settings video
    sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.light_livingroom_mode
          option: "Video"
      # - condition: state
      #   entity_id: input_boolean.light_livingroom
      #   state: "on"
      # - service: script.light_hue_mode_change

  ## Script for audio mode settings when music modes are selected 
  ## Not used, romove?
  media_amplifier_mode_music:
    alias: Set device mode muziek
    sequence:
      - service:  
          remote.send_command
        data:
          entity_id: remote.bisschops
          command:
            - ModeStereo
          device: "Denon AV Receiver"

  ## Script for audio mode settings when video modes are selected 
  ## Not used, romove?
  media_amplifier_mode_dolby:
    alias: Set device mode Dolby
    sequence:
      - service:  
          remote.send_command
        data:
          entity_id: remote.bisschops
          command:
            - ModeDolbyPLII
          device: "Denon AV Receiver"

###############################################################################
##  Timers
###############################################################################

##-----------------------------------------------------------------------------------------------
## Used in Node-RED configuration
##-----------------------------------------------------------------------------------------------

##-----------------------------------------------------------------------------------------------
## No longer in used with Node-RED configuration
##-----------------------------------------------------------------------------------------------
timer:
  ## timer for delaying the media center mains power on switch whewn off
  media_media_center_delay:
  ## timer for waiting in between two actions
  media_media_center_wait:
  ## timer for switching between radio and tv mode (For Humax)
  media_media_tv_radio_wait:
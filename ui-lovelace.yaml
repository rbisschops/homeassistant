## Lovelace-UI file for Home Assistant
## Type: Home Assistant yaml file
## Date added: 2019-12-14
## Author: R.Bisschops

###############################################################################
##  Custom compact header settings
##  https://github.com/maykar/compact-custom-header
###############################################################################

###############################################################################
##  Custom header settings
##  https://maykar.github.io/custom-header/#configuration/config
###############################################################################
custom_header:
  compact_mode: true
  hide_header: false
  disabled_mode: false
  voice_hide: false

###############################################################################
##  Custom button card templates
##  https://github.com/custom-cards/button-card
###############################################################################
button_card_templates:
  ##-----------------------------------------------------------------------------------------------
  ## Style templates - Active
  ##-----------------------------------------------------------------------------------------------
  ##-----------------------------------------------------------------------------------------------
  ## Style templates - Check
  ##-----------------------------------------------------------------------------------------------
  media_button_large:
    styles:
      card:
        - border-radius: 10px
        - color: rgb(84, 84, 84)
      icon:
        - color: rgb(84, 84, 84)
      name:
        - font-size: 1.2em
        - font-weight: normal
  media_button_small_icon:
    styles:
      card:
        - border-radius: 5px
        - color: rgb(84, 84, 84)
        - height: 50px
        # - background-color: rgb(84, 84, 84)
      icon:
        - color: rgb(84, 84, 84)
  media_button_small_icon_red:
    styles:
      card:
        - border-radius: 5px
        - color: rgb(84, 84, 84)
        - height: 50px
        # - background-color: rgb(84, 84, 84)
      icon:
        - color: rgb(140, 0, 0)
  media_button_small_icon_yellow:
    styles:
      card:
        - border-radius: 5px
        - color: rgb(84, 84, 84)
        - height: 50px
        # - background-color: rgb(84, 84, 84)
      icon:
        - color: rgb(255, 255, 54)
  media_button_small_icon_green:
    styles:
      card:
        - border-radius: 5px
        - color: rgb(84, 84, 84)
        - height: 50px
        # - background-color: rgb(84, 84, 84)
      icon:
        - color: rgb(16, 160, 0)
  media_button_small_icon_blue:
    styles:
      card:
        - border-radius: 5px
        - color: rgb(84, 84, 84)
        - height: 50px
        # - background-color: rgb(84, 84, 84)
      icon:
        - color: rgb(0, 0, 255)
  media_button_small_text_1:
    styles:
      card:
        - border-radius: 5px
        - color: rgb(237, 125, 29)
        - height: 50px
        # - background-color: rgb(84, 84, 84)
      name:
        - font-size: 2.0em
        - font-weight: normal
  media_button_small_text_2:
    styles:
      card:
        - border-radius: 5px
        - color: rgb(84, 84, 84)
        - height: 50px
        # - background-color: rgb(84, 84, 84)
      name:
        - font-size: 1.5em
        - font-weight: bold
  media_button_small_text_3:
    styles:
      card:
        - border-radius: 5px
        - color: rgb(84, 84, 84)
        - height: 50px
        # - background-color: rgb(84, 84, 84)
      name:
        - font-size: 1.2em
        - font-weight: bold
  media_button_small_text_3_red:
    styles:
      card:
        - border-radius: 5px
        - color: rgb(140, 0, 0)
        - height: 50px
        # - background-color: rgb(84, 84, 84)
      name:
        - font-size: 1.2em
        - font-weight: bold
  media_button_small_text_3_yellow:
    styles:
      card:
        - border-radius: 5px
        - color: rgb(255, 255, 54)
        - height: 50px
        # - background-color: rgb(84, 84, 84)
      name:
        - font-size: 1.2em
        - font-weight: bold
  media_button_small_text_3_blue:
    styles:
      card:
        - border-radius: 5px
        - color: rgb(0, 0, 255)
        - height: 50px
        # - background-color: rgb(84, 84, 84)
      name:
        - font-size: 1.2em
        - font-weight: bold
  media_button_small_text_3_green:
    styles:
      card:
        - border-radius: 5px
        - color: rgb(16, 160, 0)
        - height: 50px
        # - background-color: rgb(84, 84, 84)
      name:
        - font-size: 1.2em
        - font-weight: bold
  stats_button_card_small_icon:
    styles:
      card:
        - height: 70px
      name:
        - font-size: 1.0em
        - font-weight: normal
  light_button_large:
    styles:
      card:
        - border-radius: 10px
        - color: rgb(84, 84, 84)
      icon:
        - color: rgb(84, 84, 84)
      name:
        - font-size: 0.9em
        - font-weight: normal
  ## Style for RAG indicators
  stats_rag_icon:
    styles:
      card:
        - height: 70px
        - padding: 2%
      name:
        - font-size: 0.9em
        - font-weight: normal
        - text-align: left
  ## Style for interactive button
  stats_button:
    styles:
      card:
        - height: 75px
        - padding: 2%
      name:
        - font-size: 0.9em
        - font-weight: normal
        - text-align: left
  ##-----------------------------------------------------------------------------------------------
  ## Style templates - Obsolete
  ##-----------------------------------------------------------------------------------------------
  ##-----------------------------------------------------------------------------------------------
  ## Style templates - Test
  ##-----------------------------------------------------------------------------------------------

###############################################################################
##  Settings for Declustering-card
##  https://github.com/custom-cards/decluttering-card
###############################################################################

decluttering_templates:
  ##-----------------------------------------------------------------------------------------------
  ## Declutering card templates - Active
  ##-----------------------------------------------------------------------------------------------
  ## Button for controlling Click-On-Click-Off device types (light, switch)
  coco_button_large:
    card:
      type: custom:button-card
      entity: 'input_boolean.[[type]]_[[entity]]'
      icon: 'mdi:[[icon]]'
      template: stats_button
      name: '[[name]]'
      tap_action:
        action: toggle
      styles:
        grid:
          - grid-template-areas: '"i temp" "n n"'
          - grid-template-columns: 1fr 1fr
          - grid-template-rows: 1fr
        img_cell:
          - justify-content: start
          - align-items: start
          - margin: none
        icon:
          - color: >
              [[[
                if (states["switch.rfx_[[entity]]"].state == "on") return 'rgb(244, 180, 0)';
                else return 'rgb(84, 84, 84)';
              ]]]
        custom_fields:
          temp:
            - align-self: start
            - justify-self: end
      custom_fields:
        temp: >
          [[[
            return `<span style="font-size: 0.9em;"></span>`
          ]]]
  ## Button for controlling Hue device types (light), includes scene state
  hue_light_button:
    card:
      type: custom:button-card
      entity: 'input_boolean.[[entity]]_button'
      icon: 'mdi:[[icon]]'
      template: stats_button
      name: '[[name]]'
      tap_action:
        action: toggle
      styles:
        grid:
          - grid-template-areas: '"i temp" "n n"'
          - grid-template-columns: 1fr 1fr
          - grid-template-rows: 1fr
        img_cell:
          - justify-content: start
          - align-items: start
          - margin: none
        icon:
          - color: >
              [[[
                if (states["input_boolean.[[entity]]"].state == "on") return 'rgb(244, 180, 0)';
                else return 'rgb(84, 84, 84)';
              ]]]
        custom_fields:
          temp:
            - align-self: start
            - justify-self: end
            - align-items: end
      custom_fields:
        temp: >
          [[[
            return `<span style="font-size: 0.9em;">${states["input_select.[[entity]]_scene"].state}</span>`
          ]]]
  ## Button for controlling device types based on input_boolean (light)
  generic_light_button_large:
    card:
      type: custom:button-card
      entity: 'input_boolean.[[entity]]_button'
      icon: 'mdi:[[icon]]'
      template: stats_button
      name: '[[name]]'
      tap_action:
        action: toggle
      styles:
        grid:
          - grid-template-areas: '"i temp" "n n"'
          - grid-template-columns: 1fr 1fr
          - grid-template-rows: 1fr
        img_cell:
          - justify-content: start
          - align-items: start
          - margin: none
        icon:
          - color: >
              [[[
                if (states["input_boolean.[[entity]]"].state == "on") return 'rgb(244, 180, 0)';
                else return 'rgb(84, 84, 84)';
              ]]]
        custom_fields:
          temp:
            - align-self: start
            - justify-self: end
      custom_fields:
        temp: >
          [[[
            return `<span style="font-size: 0.9em;"></span>`
          ]]]
  ## Button for controlling the auto.manual state of the sunscreen(s)
  sunscreen_manual_button_large:
    card:
      type: custom:button-card
      template: light_button_large
      entity: '[[entity]]'
      icon: '[[[ if (entity.state == "on") return "mdi:alpha-m-circle"; else return "mdi:alpha-a-circle" ]]]'
      size: 30%
      show_state: false
      tap_action: 
        action: toggle
      name: '[[[ if (entity.state == "on") return "Manual"; else return "Auto" ]]]'
      state:
        - value: 'off'
          styles:
            card:
              - color: rgb(84, 84, 84)
        - value: 'on'
          styles:
            card:
              - color: rgb(56, 150, 56)
            icon:
              - color: rgb(56, 150, 56)
  ## Button for controlling switch device types (light, switch)
  switch_button_large:
    card:
      type: custom:button-card
      entity: 'input_boolean.[[type]]_[[entity]]'
      icon: 'mdi:[[icon]]'
      template: stats_button
      name: '[[name]]'
      tap_action:
        action: toggle
      styles:
        grid:
          - grid-template-areas: '"i temp" "n n"'
          - grid-template-columns: 1fr 1fr
          - grid-template-rows: 1fr
        img_cell:
          - justify-content: start
          - align-items: start
          - margin: none
        icon:
          - color: >
              [[[
                if (states["switch.switch_[[entity]]"].state == "on") return 'rgb(244, 180, 0)';
                else return 'rgb(84, 84, 84)';
              ]]]
        custom_fields:
          temp:
            - align-self: start
            - justify-self: end
      custom_fields:
        temp: >
          [[[
            return `<span style="font-size: 0.9em;"></span>`
          ]]]
  ##-----------------------------------------------------------------------------------------------
  ## Declutering card templates - Check
  ##-----------------------------------------------------------------------------------------------
  custom_markdown_card:
    card:
      type: markdown
      content: >
        ### [[title]]
      style: |
        ha-card {
          background: none;
          box-shadow: 0px 0px;
        }
        ha-markdown {
          padding: 0;
        }
        ha-markdown.no-header {
          padding: 0;
        }
  custom_markdown_card_small:
    card:
      type: markdown
      content: >
        [[title]]
      style: |
        ha-card {
          background: none;
          box-shadow: 0px 0px;
          font-size: 1em;
          font-weight: bold
        }
        ha-markdown {
          padding: 0;
        }
        ha-markdown.no-header {
          padding: 0;
        }
  media_button_large:
    card:
      type: custom:button-card
      template: media_button_large
      entity: '[[entity]]'
      icon: 'mdi:[[icon]]'
      show_entity_picture: true
      entity_picture: /local/custom_media_icons/[[picture]]
      size: 40%
      show_state: false
      tap_action:
        action: toggle
      name: '[[name]]'
      state:
        - value: 'off'
          styles:
            card:
              - color: rgb(84, 84, 84)
        - value: 'on'
          styles:
            card:
              - color: rgb(237, 125, 29)
            icon:
              - color: rgb(237, 125, 29)
  media_button_small_icon:
    card:
      type: custom:button-card
      template: media_button_small_icon
      icon: 'mdi:[[icon]]'
      tap_action:
        action: call-service
        service: remote.send_command
        service_data: 
          entity_id: remote.bisschops
          device: '[[device]]'
          command: '[[command]]'
  media_button_small_icon_red:
    card:
      type: custom:button-card
      template: media_button_small_icon_red
      icon: 'mdi:[[icon]]'
      tap_action:
        action: call-service
        service: remote.send_command
        service_data: 
          entity_id: remote.bisschops
          device: '[[device]]'
          command: '[[command]]'
  media_button_small_icon_yellow:
    card:
      type: custom:button-card
      template: media_button_small_icon_yellow
      icon: 'mdi:[[icon]]'
      tap_action:
        action: call-service
        service: remote.send_command
        service_data: 
          entity_id: remote.bisschops
          device: '[[device]]'
          command: '[[command]]'
  media_button_small_icon_blue:
    card:
      type: custom:button-card
      template: media_button_small_icon_blue
      icon: 'mdi:[[icon]]'
      tap_action:
        action: call-service
        service: remote.send_command
        service_data: 
          entity_id: remote.bisschops
          device: '[[device]]'
          command: '[[command]]'
  media_button_small_icon_green:
    card:
      type: custom:button-card
      template: media_button_small_icon_green
      icon: 'mdi:[[icon]]'
      tap_action:
        action: call-service
        service: remote.send_command
        service_data: 
          entity_id: remote.bisschops
          device: '[[device]]'
          command: '[[command]]'
  media_button_small_text_1:
    card:
      type: custom:button-card
      template: media_button_small_text_1
      name: '[[name]]'
      tap_action:
        action: call-service
        service: remote.send_command
        service_data: 
          entity_id: remote.bisschops
          device: '[[device]]'
          command: '[[command]]'
  media_button_small_text_2:
    card:
      type: custom:button-card
      template: media_button_small_text_2
      name: '[[name]]'
      tap_action:
        action: call-service
        service: remote.send_command
        service_data: 
          entity_id: remote.bisschops
          device: '[[device]]'
          command: '[[command]]'
  media_button_small_text_3:
    card:
      type: custom:button-card
      template: media_button_small_text_3
      name: '[[name]]'
      tap_action:
        action: call-service
        service: remote.send_command
        service_data: 
          entity_id: remote.bisschops
          device: '[[device]]'
          command: '[[command]]'
  media_button_small_text_3_red:
    card:
      type: custom:button-card
      template: media_button_small_text_3_red
      name: '[[name]]'
      tap_action:
        action: call-service
        service: remote.send_command
        service_data: 
          entity_id: remote.bisschops
          device: '[[device]]'
          command: '[[command]]'
  media_button_small_text_3_yellow:
    card:
      type: custom:button-card
      template: media_button_small_text_3_yellow
      name: '[[name]]'
      tap_action:
        action: call-service
        service: remote.send_command
        service_data: 
          entity_id: remote.bisschops
          device: '[[device]]'
          command: '[[command]]'
  media_button_small_text_3_green:
    card:
      type: custom:button-card
      template: media_button_small_text_3_green
      name: '[[name]]'
      tap_action:
        action: call-service
        service: remote.send_command
        service_data: 
          entity_id: remote.bisschops
          device: '[[device]]'
          command: '[[command]]'
  media_button_small_text_3_blue:
    card:
      type: custom:button-card
      template: media_button_small_text_3_blue
      name: '[[name]]'
      tap_action:
        action: call-service
        service: remote.send_command
        service_data: 
          entity_id: remote.bisschops
          device: '[[device]]'
          command: '[[command]]'
  stats_critical_small_icon:
    card:
      type: custom:button-card
      entity: 'sensor.network_[[sensor]]'
      template: stats_button_card_small_icon
      name: '[[name]]'
      tap_action:
        action: more-info
      icon: 'mdi:[[icon]]'
      state:
        - value: 'off'
          styles:
            card:
              - color: rgb(216, 0, 0)
            icon:
              - color: rgb(216, 0, 0)
        - value: 'on'
          styles:
            card:
              - color: rgb(56, 150, 56)
            icon:
              - color: rgb(56, 150, 56)
  stats_normal_small_icon:
    card:
      type: custom:button-card
      entity: 'sensor.network_[[sensor]]'
      template: stats_button_card_small_icon
      name: '[[name]]'
      tap_action:
        action: more-info
      icon: 'mdi:[[icon]]'
      state:
        - value: 'off'
          styles:
            card:
              - color: rgb(160, 160, 160)
            icon:
              - color: rgb(160, 160, 160)
        - value: 'on'
          styles:
            card:
              - color: rgb(56, 150, 56)
            icon:
              - color: rgb(56, 150, 56)
  light_button_large:
    card:
      type: custom:button-card
      template: light_button_large
      entity: '[[entity]]'
      icon: 'mdi:[[icon]]'
      size: 30%
      show_state: false
      tap_action:
        action: toggle
      name: '[[name]]'
      state:
        - value: 'off'
          styles:
            card:
              - color: rgb(84, 84, 84)
        - value: 'on'
          styles:
            card:
              - color: rgb(56, 150, 56)
            icon:
              - color: rgb(56, 150, 56)
  sunscreen_in_button_large:
    card:
      type: custom:button-card
      template: light_button_large
      entity: '[[entity]]'
      icon: 'mdi:[[icon]]'
      size: 30%
      show_state: false
      tap_action:
        action: call-service
        service: '[[service]]'
      name: '[[name]]'
      state:
        - value: 'off'
          styles:
            card:
              - color: rgb(84, 84, 84)
        - value: 'on'
          styles:
            card:
              - color: rgb(56, 150, 56)
            icon:
              - color: rgb(56, 150, 56)
  sunscreen_out_button_large:
    card:
      type: custom:button-card
      template: light_button_large
      entity: '[[entity]]'
      icon: 'mdi:[[icon]]'
      size: 30%
      show_state: false
      tap_action:
        action: call-service
        service: '[[service]]'
      name: '[[name]]'
      state:
        - value: 'off'
          styles:
            card:
              - color: rgb(56, 150, 56)
            icon:
              - color: rgb(56, 150, 56)
        - value: 'on'
          styles:
            card:
              - color: rgb(84, 84, 84)
  sunscreen_pause_button_large:
    card:
      type: custom:button-card
      template: light_button_large
      entity: '[[entity]]'
      icon: '[[[ if (entity.state == "off") return "mdi:pause-circle"; else return "mdi:play-circle" ]]]'
      size: 30%
      show_state: false
      tap_action:
        action: toggle
      name: '[[[ if (entity.state == "on") return "Verder"; else return "Pauze" ]]]'
      state:
        - value: 'off'
          styles:
            card:
              - color: rgb(56, 150, 56)
            icon:
              - color: rgb(56, 150, 56)
        - value: 'on'
          styles:
            card:
              - color: rgb(84, 84, 84)
            icon:
              - color: rgb(56, 150, 56)

  ## RAG (Red-Amber-Green) buttons with RH value and temperature value
  stats_rag_icon_humidity:
    card:
      type: custom:button-card
      entity: 'sensor.[[leader]]_[[sensor]]_humidity'
      icon: >
        [[[
          if (parseFloat(entity.state) < 40) return 'mdi:alpha-l-circle';
          if (parseFloat(entity.state) < 45 && parseFloat(entity.state) >= 40) return 'mdi:alpha-l-circle';
          if (parseFloat(entity.state) >= 45 && parseFloat(entity.state) <= 55) return 'mdi:alpha-n-circle';
          if (parseFloat(entity.state) > 55 && parseFloat(entity.state) <= 60) return 'mdi:alpha-h-circle';
          if (parseFloat(entity.state) > 60) return 'mdi:alpha-h-circle';
          else return 'mdi:alert-circle';
        ]]]
      template: stats_rag_icon
      name: '[[name]]'
      tap_action:
        action: more-info
      styles:
        grid:
          - grid-template-areas: '"i temp" "n n"'
          - grid-template-columns: 1fr 1fr
          - grid-template-rows: 1fr
        img_cell:
          - justify-content: start
          - align-items: start
          - margin: none
        icon:
          - color: >
             [[[
              if (parseFloat(entity.state) < 40) return 'rgb(216, 0, 0)';
              if (parseFloat(entity.state) < 45 && parseFloat(entity.state) >= 40) return 'rgb(244, 180, 0)';
              if (parseFloat(entity.state) >= 45 && parseFloat(entity.state) <= 55) return 'rgb(56, 150, 56)';
              if (parseFloat(entity.state) > 55 && parseFloat(entity.state) <= 60) return 'rgb(244, 180, 0)';
              if (parseFloat(entity.state) > 60) return 'rgb(216, 0, 0)';
              else return 'rgb(224, 224, 224)';
             ]]]
        custom_fields:
          temp:
            - align-self: start
            - justify-self: end
      custom_fields:
        temp: >
          [[[
            if (entity.state == "unknown") return '<ha-icon icon="mdi:water-percent" style="width: 12px; height: 1em;"></ha-icon><span style="font-size: 0.8em;">--</span>';
            else return `<ha-icon icon="mdi:water-percent" style="width: 12px; height: 1em;"></ha-icon><span style="font-size: 0.8em;">${entity.state}%</span></br><ha-icon icon="mdi:home-thermometer" style="width: 12px; height: 1em;"></ha-icon><span style="font-size: 0.8em;">${states["sensor.environment_[[sensor]]_temperature"].state}&#8451;</span>`;
          ]]]
  ## RAG (Red-Amber-Green) buttons with RH value only
  stats_rag_icon_humidity_only:
    card:
      type: custom:button-card
      entity: 'sensor.environment_[[sensor]]_humidity'
      icon: >
        [[[
          if (parseFloat(entity.state) < 40) return 'mdi:alpha-l-circle';
          if (parseFloat(entity.state) < 45 && parseFloat(entity.state) >= 40) return 'mdi:alpha-l-circle';
          if (parseFloat(entity.state) >= 45 && parseFloat(entity.state) <= 55) return 'mdi:alpha-n-circle';
          if (parseFloat(entity.state) > 55 && parseFloat(entity.state) <= 60) return 'mdi:alpha-h-circle';
          if (parseFloat(entity.state) > 60) return 'mdi:alpha-h-circle';
          else return 'mdi:alert-circle';
        ]]]
      template: stats_rag_icon
      name: '[[name]]'
      tap_action:
        action: more-info
      styles:
        grid:
          - grid-template-areas: '"i temp" "n n"'
          - grid-template-columns: 1fr 1fr
          - grid-template-rows: 1fr
        img_cell:
          - justify-content: start
          - align-items: start
          - margin: none
        icon:
          - color: >
             [[[
              if (parseFloat(entity.state) < 40) return 'rgb(216, 0, 0)';
              if (parseFloat(entity.state) < 45 && parseFloat(entity.state) >= 40) return 'rgb(244, 180, 0)';
              if (parseFloat(entity.state) >= 45 && parseFloat(entity.state) <= 55) return 'rgb(56, 150, 56)';
              if (parseFloat(entity.state) > 55 && parseFloat(entity.state) <= 60) return 'rgb(244, 180, 0)';
              if (parseFloat(entity.state) > 60) return 'rgb(216, 0, 0)';
              else return 'rgb(224, 224, 224)';
             ]]]
        custom_fields:
          temp:
            - align-self: start
            - justify-self: end
      custom_fields:
        temp: >
          [[[
            if (entity.state == "unknown") return '<ha-icon icon="mdi:water-percent" style="width: 12px; height: 1em;"></ha-icon><span style="font-size: 0.8em;">--</span>';
            else return `<ha-icon icon="mdi:water-percent" style="width: 12px; height: 1em;"></ha-icon><span style="font-size: 0.8em;">${entity.state}%</span>`;
          ]]]
  ## Interactive light buttons with status indicator
  stats_blinds_button_large:
    card:
      type: custom:button-card
      entity: 'input_boolean.[[entity]]_button'
      icon: 'mdi:[[icon]]'
      template: stats_button
      name: '[[name]]'
      tap_action:
        action: toggle
      styles:
        grid:
          - grid-template-areas: '"i temp" "n n"'
          - grid-template-columns: 1fr 1fr
          - grid-template-rows: 1fr
        img_cell:
          - justify-content: start
          - align-items: start
          - margin: none
        icon:
          - color: >
              [[[
                if (states["input_boolean.[[entity]]"].state == "on") return 'rgb(244, 180, 0)';
                else return 'rgb(84, 84, 84)';
              ]]]
        custom_fields:
          temp:
            - align-self: start
            - justify-self: end
            - align-items: end
      custom_fields:
        temp: >
          [[[
            return `<span style="font-size: 0.9em;">${states["input_select.[[entity]]"].state}</span></br><span style="font-size: 0.9em;">${states["input_select.[[entity]]_reason"].state}</span>`
          ]]]
  stats_light_button_large:
    card:
      type: custom:button-card
      entity: 'input_boolean.[[entity]]_button'
      icon: 'mdi:[[icon]]'
      template: stats_button
      name: '[[name]]'
      tap_action:
        action: toggle
      styles:
        grid:
          - grid-template-areas: '"i temp" "n n"'
          - grid-template-columns: 1fr 1fr
          - grid-template-rows: 1fr
        img_cell:
          - justify-content: start
          - align-items: start
          - margin: none
        icon:
          - color: >
              [[[
                if (states["input_boolean.[[entity]]"].state == "on") return 'rgb(244, 180, 0)';
                else return 'rgb(84, 84, 84)';
              ]]]
        custom_fields:
          temp:
            - align-self: start
            - justify-self: end
      custom_fields:
        temp: >
          [[[
            return `<span style="font-size: 0.9em;">${states["input_select.[[entity]]"].state}</span>`
          ]]]
  stats_light_button_large_new:
    card:
      type: custom:button-card
      entity: 'input_boolean.[[type]]_[[entity]]'
      icon: 'mdi:[[icon]]'
      template: stats_button
      name: '[[name]]'
      tap_action:
        action: toggle
      styles:
        grid:
          - grid-template-areas: '"i temp" "n n"'
          - grid-template-columns: 1fr 1fr
          - grid-template-rows: 1fr
        img_cell:
          - justify-content: start
          - align-items: start
          - margin: none
        icon:
          - color: >
              [[[
                if (states["switch.rfx_[[entity]]"].state == "on") return 'rgb(244, 180, 0)';
                else return 'rgb(84, 84, 84)';
              ]]]
        custom_fields:
          temp:
            - align-self: start
            - justify-self: end
      custom_fields:
        temp: >
          [[[
            return `<span style="font-size: 0.9em;">${states["input_select.[[type]]_[[entity]]"].state}</span>`
          ]]]
  stats_light_button_dimmer:
    card:
      type: custom:button-card
      entity: 'input_boolean.[[entity]]_button'
      icon: 'mdi:[[icon]]'
      template: stats_button
      name: '[[name]]'
      tap_action:
        action: toggle
      styles:
        grid:
          - grid-template-areas: '"i temp" "n n"'
          - grid-template-columns: 1fr 1fr
          - grid-template-rows: 1fr
        img_cell:
          - justify-content: start
          - align-items: start
          - margin: none
        icon:
          - color: >
              [[[
                if (states["input_boolean.[[entity]]"].state == "on") return 'rgb(244, 180, 0)';
                else return 'rgb(84, 84, 84)';
              ]]]
        custom_fields:
          temp:
            - align-self: start
            - justify-self: end
      custom_fields:
        temp: >
          [[[
            return `<span style="font-size: 0.9em;">${states["input_number.[[entity]]_dimmer"].state}</span>`
          ]]]
  stats_climate_button_large:
    card:
      type: custom:button-card
      entity: 'input_boolean.[[entity]]'
      icon: 'mdi:[[icon]]'
      template: stats_button
      name: '[[name]]'
      tap_action:
        action: toggle
      styles:
        grid:
          - grid-template-areas: '"i temp" "n n"'
          - grid-template-columns: 1fr 1fr
          - grid-template-rows: 1fr
        img_cell:
          - justify-content: start
          - align-items: start
          - margin: none
        icon:
          - color: >
              [[[
                if (states["input_boolean.[[entity]]"].state == "on") return 'rgb(244, 180, 0)';
                else return 'rgb(84, 84, 84)';
              ]]]
        custom_fields:
          temp:
            - align-self: start
            - justify-self: end
      custom_fields:
        temp: >
          [[[
            return `<span style="font-size: 0.9em;">${states["input_select.[[entity]]"].state}</span>`
          ]]]
  stats_media_button_large:
    card:
      type: custom:button-card
      entity: 'switch.[[entity]]'
      icon: 'mdi:[[icon]]'
      template: stats_button
      name: '[[name]]'
      tap_action:
        action: toggle
      styles:
        grid:
          - grid-template-areas: '"i temp" "n n"'
          - grid-template-columns: 1fr 1fr
          - grid-template-rows: 1fr
        img_cell:
          - justify-content: start
          - align-items: start
          - margin: none
        icon:
          - color: >
              [[[
                if (states["switch.[[entity]]"].state == "on") return 'rgb(244, 180, 0)';
                else return 'rgb(84, 84, 84)';
              ]]]
        custom_fields:
          temp:
            - align-self: start
            - justify-self: end
      custom_fields:
        temp: >
          [[[
            return `<span style="font-size: 0.9em;">${states["input_select.media_harmony_livingroom_new_state"].state}</span>`
          ]]]
  garbage_bin:
    card:
      type: custom:button-card
      entity: 'input_boolean.[[entity]]'
      icon: 'mdi:[[icon]]'
      entity_picture: >
        [[[
          if (states["input_select.[[entity]]"].state == "Thuis") return '/local/icons/[[image]]_on.png';
          else if (states["input_select.[[entity]]"].state == "Alarm") return '/local/icons/[[image]]_alert.png';
          else return '/local/icons/bin_off.png'
        ]]] 
      show_entity_picture: true
      template: stats_button
      name: '[[name]]'
      tap_action:
        action: toggle
      styles:
        grid:
          - grid-template-areas: '"i temp" "n n"'
          - grid-template-columns: 1fr 1fr
          - grid-template-rows: 1fr
        img_cell:
          - justify-content: start
          - align-items: start
          - margin: none
        icon:
          - color: >
              [[[
                if (states["input_boolean.[[entity]]"].state == "on") return 'rgb(4, 103, 255)';
                else return 'rgb(84, 84, 84)';
              ]]]
        custom_fields:
          temp:
            - align-self: start
            - justify-self: end
      custom_fields:
        temp: >
          [[[
            return `<span style="font-size: 0.9em;">${states["input_select.[[entity]]"].state}</span>`
          ]]]
  ##-----------------------------------------------------------------------------------------------
  ## Declutering card templates - Obsolete
  ##-----------------------------------------------------------------------------------------------
  ##-----------------------------------------------------------------------------------------------
  ## Declutering card templates - Test
  ##-----------------------------------------------------------------------------------------------
  stats_rh_rag_icon_test:
    card:
      type: custom:button-card
      entity: 'sensor.environment_[[sensor]]_humidity'
      template: stats_rag_icon
      name: '[[name]]'
      tap_action:
        action: more-info
      icon: 'mdi:[[icon]]'
      layout: icon_name
      styles:
        icon:
          - color: >
             [[[
              if (parseFloat(entity.state) < 40) return 'rgb(216, 0, 0)';
              if (parseFloat(entity.state) < 45 && parseFloat(entity.state) >= 40) return 'rgb(244, 180, 0)';
              if (parseFloat(entity.state) >= 45 && parseFloat(entity.state) <= 55) return 'rgb(56, 150, 56)';
              if (parseFloat(entity.state) > 55 && parseFloat(entity.state) <= 60) return 'rgb(244, 180, 0)';
              if (parseFloat(entity.state) > 60) return 'rgb(216, 0, 0)';
              else return 'rgb(224, 224, 224)';
             ]]]

###############################################################################
##  Main Lovelace settings
###############################################################################
title: Bisschops Mansion
views:
  - !include lovelace/home.yaml
  - !include lovelace/mediaplayer.yaml
  - !include lovelace/weather.yaml
  - !include lovelace/utilities.yaml
  - !include lovelace/stats.yaml
  - !include lovelace/things.yaml
  - !include lovelace/settings.yaml
  - !include lovelace/groundfloor.yaml
  # - !include lovelace/groundfloor_old.yaml
  - !include lovelace/storage.yaml 
  - !include lovelace/firstfloor.yaml
  - !include lovelace/secondfloor.yaml
  - !include lovelace/garden.yaml
  - !include lovelace/automations.yaml
  - !include lovelace/test.yaml